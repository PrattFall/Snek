
==================== FINAL INTERFACE ====================
2016-03-24 07:30:47.233731 UTC

interface main@main:Main 7103
  interface hash: 0ef58ab157fa0e4da912af8e18ea794a
  ABI hash: e5f165709b8fc1983414e89cdd9febc1
  export-list hash: 07143671dc5ae970762984a917e51f71
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 3133cecfa17bb25e2b4ef2bfb8205840
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 snake-0.0.1.0@snake_Fl2eL9xvVIkFKyiu4RtRAc
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO e7c9ddd0b9319c17e6733109efa94847
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  snake-0.0.1.0@snake_Fl2eL9xvVIkFKyiu4RtRAc:Snek 568a5c9340a430ee21071e539fafe3f3
58423e28b88e7e199b9f0bfb4ccbabbd
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
c73011af92c9eadc94f5fbd2466599cb
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main17
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main16
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   ipv2 } }) -}
40031557b98822d337b9361bdb240b04
  main10 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5) -}
9b54e0af3e061592ca603dafb1848186
  main11 :: Snek.Point
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Snek.Point Main.main12 Main.main9) -}
37e58e22e97236fdb7c80e5b13d45b2f
  main12 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4) -}
a1bc1554443acf820926daa0562e7090
  main13 :: Snek.Point
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Snek.Point Main.main9 Main.main9) -}
c60d80ee4af3bbc25b54d112366eb3f7
  main14 :: Snek.SnakeBit
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Snek.Point Main.main15 Main.main9) -}
c80cc830ea89c35e4a46df36aedab196
  main15 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2) -}
67960aa53aece009c99cb73bd220c669
  main16 :: GHC.Base.String
  {- Unfolding: (Snek.$w$cshowsPrec4
                   0
                   Snek.W
                   Main.main3
                   (GHC.Types.[] @ GHC.Types.Char)) -}
154ea463c03c1c597f367b1db79d634e
  main17 :: GHC.Base.String
  {- Unfolding: (case Snek.$wcreateMap
                        Main.main19
                        Main.main19
                        Main.main3
                        Main.main18 of ww6 { (#,#) ww7 ww8 ->
                 case ww7 of ww3 { Snek.MapSize ipv ipv1 ->
                 Snek.displayMap_go ww8 } }) -}
69e7ef67bbec675f876311e23a2ddac8
  main18 :: Snek.Point
  {- HasNoCafRefs, Unfolding: (Snek.Point Main.main9 Main.main10) -}
48b3ff7d09dd6c960e3015fa0549b495
  main19 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 8) -}
7f7bd138e4283c4a745e9e6734d29d7e
  main2 :: GHC.Base.String
  {- Unfolding: (case Snek.$wsnakeAteSelf Main.main3 of wild {
                   GHC.Types.False -> GHC.Show.shows17
                   GHC.Types.True -> GHC.Show.shows16 }) -}
6b2821cbb16da0d82e1de1e1f5dbb22d
  main20 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
dcbcc079806d680cdbc825b1b0ee0582
  main3 :: [Snek.SnakeBit]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Snek.SnakeBit
                   Main.main14
                   Main.main_sb) -}
a6c5dc74b58fd1c9e864db41ab4ccec5
  main4 :: [Snek.SnakeBit]
  {- Unfolding: (GHC.List.init1
                   @ Snek.SnakeBit
                   Main.main11
                   Main.main5) -}
a6a54fb794a4dee904b669d208d37a27
  main5 :: [Snek.SnakeBit]
  {- Unfolding: (GHC.List.init1
                   @ Snek.SnakeBit
                   Main.main13
                   Main.main6) -}
b3153e6efcee10fcf8ba8f469dfa9dfc
  main6 :: [Snek.SnakeBit]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ Snek.SnakeBit Main.main11 Main.main7) -}
b50971c4f2cac15390e4092a5b61cc7f
  main7 :: [Snek.SnakeBit]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Snek.SnakeBit
                   Main.main8
                   (GHC.Types.[] @ Snek.SnakeBit)) -}
1ce44bcbf2db24f4d8440d2e1ab210fc
  main8 :: Snek.Point
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Snek.Point Main.main10 Main.main9) -}
3300700b45561e6639d6fa5231e70668
  main9 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3) -}
a45ffad7a328e8e01732e811b5e93fb7
  main_sb :: [Snek.SnakeBit]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ Snek.SnakeBit Main.main13 Main.main4) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

